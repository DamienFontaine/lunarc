// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/DamienFontaine/lunarc/security (interfaces: UserManager)

package mock

import (
	security "github.com/DamienFontaine/lunarc/security"
	gomock "github.com/golang/mock/gomock"
)

// Mock of UserManager interface
type MockUserManager struct {
	ctrl     *gomock.Controller
	recorder *_MockUserManagerRecorder
}

// Recorder for MockUserManager (not exported)
type _MockUserManagerRecorder struct {
	mock *MockUserManager
}

func NewMockUserManager(ctrl *gomock.Controller) *MockUserManager {
	mock := &MockUserManager{ctrl: ctrl}
	mock.recorder = &_MockUserManagerRecorder{mock}
	return mock
}

func (_m *MockUserManager) EXPECT() *_MockUserManagerRecorder {
	return _m.recorder
}

func (_m *MockUserManager) Get(_param0 string, _param1 string) (security.User, error) {
	ret := _m.ctrl.Call(_m, "Get", _param0, _param1)
	ret0, _ := ret[0].(security.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockUserManagerRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0, arg1)
}
